#pragma checksum "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ea0208dbdc49b1ab6351b8710dee20f8fbd5e5b4"
// <auto-generated/>
#pragma warning disable 1591
namespace ZooBreakout.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Data;

#line default
#line hidden
#nullable disable
    public partial class FirstRound : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.OpenElement(0, "div");
            __builder.AddAttribute(1, "class", 
#nullable restore
#line 5 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
             backgroundimg

#line default
#line hidden
#nullable disable
            );
            __builder.AddMarkupContent(2, "<audio id=\"flip\" src=\"./media/sfx-paperflip1.mp3\"></audio>\n    <audio id=\"disappear\" src=\"./media/sfx-swoosh6.mp3\"></audio>\n\n    ");
            __builder.AddMarkupContent(3, "<header><div class=\"deck-logo\"><img src=\"../img/deck-logo.png\" alt=\"ZooBreakout!\"></div></header>\n\t\n\t");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "flex-container");
            __builder.OpenElement(6, "div");
            __builder.AddAttribute(7, "class", "flex-row");
            __builder.OpenElement(8, "span");
            __builder.AddAttribute(9, "class", "flex-item");
            __builder.AddContent(10, " Player name: ");
            __builder.OpenElement(11, "b");
            __builder.AddAttribute(12, "id", "player-name");
            __builder.AddContent(13, 
#nullable restore
#line 20 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                       Name

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(14, "\n\t\t");
            __builder.OpenElement(15, "div");
            __builder.AddAttribute(16, "class", "flex-row");
            __builder.OpenElement(17, "span");
            __builder.AddAttribute(18, "class", "flex-item");
            __builder.AddContent(19, " Round number: ");
            __builder.OpenElement(20, "b");
            __builder.AddAttribute(21, "id", "Round-number");
            __builder.AddContent(22, 
#nullable restore
#line 23 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                          NumberOfRounds+1

#line default
#line hidden
#nullable disable
            );
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(23, "\n\n\t");
            __builder.OpenElement(24, "section");
            __builder.AddAttribute(25, "id", "game");
            __builder.OpenElement(26, "div");
            __builder.AddAttribute(27, "id", "cards justify-content-center");
#nullable restore
#line 29 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
             if (!UserWon && GamePossibleToWin)
            {
                int count = 0;
                

#line default
#line hidden
#nullable disable
#nullable restore
#line 33 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                 foreach(var card in TheDeck.Cards)
                {
                    int index = count;
                    if (card == 0)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(28, "img");
            __builder.AddAttribute(29, "class", "card1");
            __builder.AddAttribute(30, "src", 
#nullable restore
#line 38 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                Cards[CardFaces[index]]

#line default
#line hidden
#nullable disable
            );
            __builder.AddAttribute(31, "alt", "card");
            __builder.AddAttribute(32, "width", "100%");
            __builder.AddAttribute(33, "style", "margin:2px;max-width:200px;");
            __builder.AddAttribute(34, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 38 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                                              () => CardClicked(index)

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseElement();
#nullable restore
#line 39 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }
                    else if (card == 1)
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(35, "img");
            __builder.AddAttribute(36, "class", "card1");
            __builder.AddAttribute(37, "src", "../img/cards/back_card.png");
            __builder.AddAttribute(38, "alt", "card");
            __builder.AddAttribute(39, "width", "100%");
            __builder.AddAttribute(40, "style", "margin:2px;max-width:200px;");
            __builder.AddAttribute(41, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 42 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                                                  () => CardClicked(index)

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseElement();
#nullable restore
#line 43 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(42, "img");
            __builder.AddAttribute(43, "class", "card1");
            __builder.AddAttribute(44, "src", "../img/cards/blank_card.png");
            __builder.AddAttribute(45, "alt", "card");
            __builder.AddAttribute(46, "width", "100%");
            __builder.AddAttribute(47, "style", "margin:2px;max-width:200px; opacity:0;");
            __builder.AddAttribute(48, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 46 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                                                              () => CardClicked(index)

#line default
#line hidden
#nullable disable
            ));
            __builder.CloseElement();
#nullable restore
#line 47 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }
                    count++;
                }

#line default
#line hidden
#nullable disable
#nullable restore
#line 49 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                 
            }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 55 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
     if (UserWon || !GamePossibleToWin)
    {

#line default
#line hidden
#nullable disable
            __builder.OpenElement(49, "section");
            __builder.AddAttribute(50, "id", "popup");
            __builder.AddMarkupContent(51, "<div id=\"popup-bg\"></div>\n            ");
            __builder.OpenElement(52, "div");
            __builder.AddAttribute(53, "id", "popup-box");
            __builder.OpenElement(54, "div");
            __builder.AddAttribute(55, "id", "popup-box-content");
#nullable restore
#line 62 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                     if (UserWon && NumberOfRounds != 5)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(56, "<audio hidden autoplay controls><source src=\"../media/sfx-victory5.mp3\"></audio>");
#nullable restore
#line 65 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                        Wins++;

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(57, "<h1 class=\"display-1\">You Won!</h1>\n                        ");
            __builder.OpenElement(58, "a");
            __builder.AddAttribute(59, "class", "st-btn btn-fill");
            __builder.AddAttribute(60, "data-toggle", "modal");
            __builder.AddAttribute(61, "data-target", "#");
            __builder.AddAttribute(62, "style", "margin-top:20px;");
            __builder.AddAttribute(63, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 67 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                          NextGame

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(64, "Next Game!");
            __builder.CloseElement();
#nullable restore
#line 68 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 69 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                        
                    else if (!GamePossibleToWin && !UserWon && NumberOfRounds == 4)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(65, "<audio hidden autoplay controls><source src=\"../media/sfx-defeat4.mp3\"></audio>\n                        ");
            __builder.AddMarkupContent(66, "<h1 class=\"display-1\"> You Lost!</h1>\n                        ");
            __builder.AddMarkupContent(67, @"<p style=""font-size: 15px;"">But, why? This last game was actually unwinnable. Even if you played it perfectly, you would not have
                            been able to win.<br>Click next to find out why!
                        </p>
                        ");
            __builder.OpenElement(68, "a");
            __builder.AddAttribute(69, "class", "st-btn btn-fill");
            __builder.AddAttribute(70, "data-toggle", "modal");
            __builder.AddAttribute(71, "data-target", "#");
            __builder.AddAttribute(72, "style", "margin-top:20px;");
            __builder.AddAttribute(73, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 77 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                          () => FirstRoundComplete.InvokeAsync(Wins)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(74, "Next");
            __builder.CloseElement();
#nullable restore
#line 78 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 79 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                          
                    else if (!GamePossibleToWin && !UserWon)
                    {

#line default
#line hidden
#nullable disable
            __builder.AddMarkupContent(75, "<audio hidden autoplay controls><source src=\"../media/sfx-defeat4.mp3\"></audio>\n                        ");
            __builder.AddMarkupContent(76, "<h1 class=\"display-1\">You Lost!</h1>\n                        ");
            __builder.OpenElement(77, "a");
            __builder.AddAttribute(78, "class", "st-btn btn-fill");
            __builder.AddAttribute(79, "data-toggle", "modal");
            __builder.AddAttribute(80, "data-target", "#");
            __builder.AddAttribute(81, "style", "margin-top:20px;");
            __builder.AddAttribute(82, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 84 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                                                                                                                          NextGame

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(83, "Next Game!");
            __builder.CloseElement();
#nullable restore
#line 85 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
                    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
#nullable restore
#line 89 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
    }

#line default
#line hidden
#nullable disable
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 92 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/FirstRound.razor"
       
    [Parameter]
    public EventCallback<int> FirstRoundComplete { get; set; }
    [Parameter]
    public string Name { get; set; } = "";
    public Deck TheDeck { get; set; }
    public bool UserWon { get; set; } = false;
    public int NumberOfRounds { get; set; } = 0;
    public int Wins { get; set; } = 0;
    public bool GamePossibleToWin { get; set; } = true;
    public string[] Cards = new string[] {
        "../img/cards/bear_card.png", "../img/cards/cat_card.png", "../img/cards/flamingo_card.png", 
        "../img/cards/iguana_card.png", "../img/cards/jellyfish_card.png", "../img/cards/kangoroo_card.png", 
        "../img/cards/lion_card.png", "../img/cards/owl_card.png"
    };
    public int[] CardFaces = new int[5];
    Random random = new Random(DateTime.Now.Millisecond);
    public string backgroundimg { get; set; } = "";

    protected override void OnInitialized()
    {
        // create new game
        TheDeck = new Deck(1, NumberOfRounds);
        GamePossibleToWin = true;

        // pick random card faces
        for (int i = 0; i < 5; i++)
            CardFaces[i] = random.Next(Cards.Length);
        
        // pick random background
        int imagenum = random.Next(0, 3);
        if (imagenum == 0)
            backgroundimg = "image1";
        else if (imagenum == 1)
            backgroundimg = "image2";
        else
            backgroundimg = "image3";
        
        base.OnInitialized();
    }


    public async void CardClicked(int card)         // called when a card is clicked. It flips the corresponding cards
    {
        // flip cards, check win/loss, and update screen
        TheDeck.ChangeCard(card);
        UserWon = TheDeck.CheckWin();
        GamePossibleToWin = TheDeck.WinPossible(0);
        await JSRuntime.InvokeAsync<string>("CardFlipSound");
    }
     
    public void NextGame()                          // called when a game is complete and the user continues
    {
        // reset the game
        NumberOfRounds++;
        TheDeck = new Deck(1, NumberOfRounds);
        for (int i = 0; i < 5; i++)
            CardFaces[i] = random.Next(Cards.Length);
        UserWon = false;
        GamePossibleToWin = true;
    }

#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
    }
}
#pragma warning restore 1591
