#pragma checksum "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/Explanation.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0ce7bb3a902aefd9a438ed005fbf9bbf6291e24c"
// <auto-generated/>
#pragma warning disable 1591
namespace ZooBreakout.Components
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.AspNetCore.Components.Web.Virtualization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 12 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 13 "/Users/anthony/Documents/GitHub/CS4500_Group4/_Imports.razor"
using ZooBreakout.Data;

#line default
#line hidden
#nullable disable
    public partial class Explanation : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
            __builder.AddMarkupContent(0, "<div class=\"row align-items-center justify-content-center explanation-row\"><div class=\"col\"><h1 class=\"display-2\">Why you couldn\'t win.</h1>\n        <p class=\"explanation-text\">\n            It turns out, that that your ability to win depends nearly entirely on whether there\n            is an even or odd amount of face up cards. If there are an even amount (like the game\n            you just played), then you will be doomed from the beginning. But, if you know the\n            correct strategy, you will be able to win if there are an odd number of face up cards.\n            This makes the probability of having a winnable game 50%, meaning if you play 1,000\n            games, about 500 of them will be a winnable scenerio.\n        </p></div>\n    <div class=\"col\"><div class=\"row align-items-center justify-content-center diagram-1\"><img src=\"../img/remove.png\" width=\"50px;\">\n            <img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n            <img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n            <img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\"></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><img src=\"../img/check.png\" width=\"50px;\">\n            <img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n            <img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n            <img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"></div></div></div>\n");
            __builder.OpenElement(1, "div");
            __builder.AddAttribute(2, "class", "row align-items-center justify-content-center explanation-row");
            __builder.AddMarkupContent(3, "<div class=\"col\"><div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3 or 1</p></div>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1 or 3</p></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up End</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down End</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div></div>\n    ");
            __builder.OpenElement(4, "div");
            __builder.AddAttribute(5, "class", "col");
            __builder.AddMarkupContent(6, "<h1 class=\"display-2\">A little bit of background knowledge</h1>\n        ");
            __builder.AddMarkupContent(7, @"<p class=""explanation-text"">
            In order to know how to beat a winnable game, you need to know what order to draw the cards
            in. This can be a little tricky if you don't know where to start looking for answers. But,
            if we start looking at the game piece by piece we can figure it out! It turns out, a face up
            card needs to be drawn either before both of its neighbors or after both. This results in the
            card still being face up and allowing you to take it. On the other hand, if the card is face
            down, then the card must be drawn after one of its neighbors (making it face up) and before
            its other one (which would make it face down). These two concepts can also be used to infer
            how we must draw the end cards. A face down end card must be drawn after its neighbor, and a
            face up one must be drawn before its neighbor.
        </p>
        ");
            __builder.OpenElement(8, "button");
            __builder.AddAttribute(9, "class", "btn btn-md btn-primary");
            __builder.AddAttribute(10, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 106 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/Explanation.razor"
                                                         () => ExplanationContinue.InvokeAsync(true)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(11, "Next");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.AddMarkupContent(12, "\n");
            __builder.AddMarkupContent(13, "<div class=\"row align-items-center justify-content-center explanation-row\"><div class=\"col\"><h1 class=\"display-2\">Okay... but how does that help you?</h1>\n        <p class=\"explanation-text\">\n            Well, now that we know the order for drawing each card, we can use inequalities to show it\n            graphically. You may be thinking, \"Oh no... not math stuff,\" but I assure you that this will\n            make your life a whole lot easier! If we look at the diagrams to the right, we can see the \n            cards that we numbered for each scenerio previously, but will greater than or less than\n            symbols in between each.  If you think of the symbols as arrows, then the arrow points to which \n            cards need to be drawn first, second, third, and so on!\n        </p></div>\n    <div class=\"col\"><div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div>\n            <img src=\"../img/right-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <img src=\"../img/left-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <img src=\"../img/left-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <img src=\"../img/right-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up End</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <img src=\"../img/left-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <img src=\"../img/left-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down End</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>2</p></div>\n            <img src=\"../img/right-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>1</p></div>\n            <img src=\"../img/left-chevron.png\" width=\"50px;\" style=\"margin:8px;\">\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\">\n                <p>3</p></div></div></div></div>\n");
            __builder.OpenElement(14, "div");
            __builder.AddAttribute(15, "class", "row align-items-center justify-content-center explanation-row");
            __builder.AddMarkupContent(16, "<div class=\"col\"><div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-right.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/yellow-piece.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-left.png\" height=\"75px\"></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-left.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/blue-outward.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-right.png\" height=\"75px\"></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Up End</h1>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/orange-left.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-left.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-left.png\" height=\"75px\"></div></div>\n        <div class=\"row align-items-center justify-content-center diagram-1\"><h1 style=\"width:200px;\">Face-Down End</h1>\n            <div><img src=\"../img/cards/back_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-right.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/bear_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/purple-right.png\" height=\"75px\"></div>\n            <div><img src=\"../img/cards/cat_card.png\" width=\"175px\" style=\"margin:8px;\"><br>\n                <img src=\"../img/puzzlepieces/orange-right.png\" height=\"75px\"></div></div></div>\n    ");
            __builder.OpenElement(17, "div");
            __builder.AddAttribute(18, "class", "col");
            __builder.AddMarkupContent(19, "<h1 class=\"display-2\">PUZZLE PIECES!</h1>\n        ");
            __builder.AddMarkupContent(20, @"<p class=""explanation-text"">
            Now let's wrap this up and get back to playing! There are five different symbols that can be created
            from these inequalities. You can think of them as puzzle pieces! To the right you can see all of them. 
            Please look over the diagram and commit these to memory! You will know exactly how to win each game
            (if it is winnable) if you do this! But, before you continue there is one important thing to note. The 
            [color] puzzle peices must be drawn first! Click continue when you're ready to start playing again!
        </p>
        ");
            __builder.OpenElement(21, "button");
            __builder.AddAttribute(22, "class", "btn btn-md btn-primary");
            __builder.AddAttribute(23, "onclick", Microsoft.AspNetCore.Components.EventCallback.Factory.Create<Microsoft.AspNetCore.Components.Web.MouseEventArgs>(this, 
#nullable restore
#line 264 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/Explanation.razor"
                                                         () => ExplanationContinue.InvokeAsync(true)

#line default
#line hidden
#nullable disable
            ));
            __builder.AddContent(24, "Next");
            __builder.CloseElement();
            __builder.CloseElement();
            __builder.CloseElement();
        }
        #pragma warning restore 1998
#nullable restore
#line 268 "/Users/anthony/Documents/GitHub/CS4500_Group4/Components/Explanation.razor"
       
    [Parameter]
    public EventCallback<bool> ExplanationContinue { get; set; }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
